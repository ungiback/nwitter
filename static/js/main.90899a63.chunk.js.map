{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["fire_app","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","store","fire_store","auth","fire_auth","fstorage","fire_storage","AuthForm","useState","eamil","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","getAuth","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteDoc","doc","getFirestore","id","deleteObject","ref","getStorage","attachmentUrl","toggleEditing","updateDoc","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","response","getDownloadURL","nweetObje","createdAt","Date","now","creatorId","addDoc","collection","console","log","maxLength","for","faPlus","accept","thefile","files","reader","FileReader","readAsDataURL","onloadend","finishedEvent","result","currentTarget","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","query","snapshot","arr_sorted","docs","map","data","sort","b","marginTop","Profile","refreshUser","displayName","newDisplayName","setNewDisplayName","history","useHistory","onLogOutClick","signOut","push","updateProfile","currentUser","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90899a63.chunk.js","sourcesContent":["import * as fire_app from \"firebase/app\";\r\nimport * as fire_auth from \"firebase/auth\"\r\nimport * as fire_store from \"firebase/firestore\"\r\nimport * as fire_storage from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSGING_SENDERID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\nfire_app.initializeApp(firebaseConfig);\r\n\r\nexport const getApp = fire_app;\r\nexport const store = fire_store;\r\nexport const auth = fire_auth;\r\nexport const fstorage = fire_storage;\r\n","import React, { useState } from \"react\";\r\nimport { auth } from 'fbase'\r\n\r\nconst AuthForm = () => {\r\n    const [eamil, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [newAccount, setNewAccount] = useState(false)\r\n    const [error, setError] = useState('')\r\n    const onChange = (event) => {\r\n        const { target: { name, value } } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value)\r\n        } else {\r\n            setPassword(value)\r\n        }\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            if (newAccount) {\r\n                await auth.createUserWithEmailAndPassword(auth.getAuth(), eamil, password);\r\n            } else {\r\n                await auth.signInWithEmailAndPassword(auth.getAuth(), eamil, password);\r\n            }\r\n        } catch (error) {\r\n            setError(error.message)\r\n        }\r\n    }\r\n    const toggleAccount = () => setNewAccount(prev => !prev)\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input onChange={onChange} name=\"email\" type=\"text\" placeholder=\"Email\" required value={eamil} className=\"authInput\" />\r\n                <input onChange={onChange} name=\"password\" type=\"password\" placeholder=\"password\" required value={password} className=\"authInput\" />\r\n                <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign in\" : \"createAccount\"}</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthForm;","// import { authService } from 'fbase'\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faTwitter,\r\n    faGoogle,\r\n    faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from 'components/AuthForm'\r\nimport { auth } from 'fbase'\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const { target: { name } } = event;\r\n        let provider;\r\n        if (name === 'google') {\r\n            provider = new auth.GoogleAuthProvider();\r\n        } else if (name === 'github') {\r\n            provider = new auth.GithubAuthProvider();\r\n        }\r\n        await auth.signInWithPopup(auth.getAuth(), provider)\r\n    }\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { store, fstorage } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Delete?\");\r\n        if (ok) {\r\n            await store.deleteDoc(store.doc(store.getFirestore(), \"nweets\", `${nweetObj.id}`))\r\n            await fstorage.deleteObject(fstorage.ref(fstorage.getStorage(), nweetObj.attachmentUrl))\r\n        }\r\n    }\r\n    const toggleEditing = () => setEditing(prev => !prev)\r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n        setNewNweet(value)\r\n    }\r\n    const onSubmit = async () => {\r\n        await store.updateDoc(store.doc(store.getFirestore(), \"nweets\", `${nweetObj.id}`), {\r\n            text: newNweet\r\n        })\r\n        setEditing(false)\r\n    }\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input type=\"text\"\r\n                            placeholder=\"Edit your nweet\"\r\n                            onChange={onChange}\r\n                            value={newNweet}\r\n                            autoFocus\r\n                            required\r\n                            className=\"formInput\" />\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</span>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                    {isOwner && (<div className=\"nweet__actions\">\r\n                        <span onClick={onDeleteClick}>\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </span>\r\n                        <span onClick={toggleEditing}>\r\n                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                        </span>\r\n                    </div>)}\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nNweet.propTypes = {\r\n    nweetObj: PropTypes.object.isRequired,\r\n    isOwner: PropTypes.bool,\r\n}\r\n\r\nexport default Nweet;\r\n","import React, { useState } from 'react'\r\nimport { store, fstorage } from 'fbase';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = fstorage.ref(fstorage.getStorage(), `${userObj.uid}/${uuidv4()}`);\r\n            const response = await fstorage.uploadString(attachmentRef, attachment, 'data_url');\r\n            attachmentUrl = await fstorage.getDownloadURL(fstorage.ref(fstorage.getStorage(), response.ref));\r\n        }\r\n        const nweetObje = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        }\r\n        try {\r\n            await store.addDoc(store.collection(store.getFirestore(), \"nweets\"), nweetObje);\r\n            setNweet(\"\");\r\n            setAttachment(\"\")\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n        setNweet(value);\r\n    }\r\n    const onFileChange = (event) => {\r\n        const { target: { files } } = event;\r\n        const thefile = files[0];\r\n        const reader = new FileReader();\r\n\r\n        reader.readAsDataURL(thefile);\r\n        reader.onloadend = (finishedEvent) => {\r\n            const { currentTarget: { result } } = finishedEvent;\r\n            setAttachment(result)\r\n        }\r\n    }\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }} />\r\n            {attachment && <div className=\"factoryForm__attachment\">\r\n                <img\r\n                    src={attachment}\r\n                    style={{\r\n                        backgroundImage: attachment,\r\n                    }}\r\n                />\r\n                <button className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                    <span>Remove</span>\r\n                    <FontAwesomeIcon icon={faTimes} />\r\n                </button>\r\n            </div>}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NweetFactory;","import React, { useEffect,useState } from 'react'\r\nimport { store } from 'fbase';\r\nimport Nweet from 'components/Nweet';\r\nimport NweetFactory from 'components/NweetFactory';\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        store.onSnapshot(store.query(store.collection(store.getFirestore(), \"nweets\")), (snapshot) => {\r\n            const nweetArray = snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }))\r\n            const arr_sorted = nweetArray.sort(function (a, b) {\r\n                return b.createdAt - a.createdAt;\r\n            })\r\n            setNweets(arr_sorted)\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\" >\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map(nweet =>\r\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import { auth } from 'fbase'\r\nimport React, { useState } from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Profile = ({ refreshUser, userObj }) => {\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const history = useHistory()\r\n    const onLogOutClick = async () => {\r\n        await auth.signOut(auth.getAuth());\r\n        history.push('/')\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n        setNewDisplayName(value)\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await auth.updateProfile(auth.getAuth().currentUser, { displayName: newDisplayName })\r\n        }\r\n        refreshUser();\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input type=\"text\" value={newDisplayName} onChange={onChange} placeholder=\"Display name\" autoFocus className=\"formInput\" />\r\n                <input type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }} />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfile.propTypes = {\r\n    refreshUser: PropTypes.func,\r\n    userObj: PropTypes.object\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n                <li>\r\n                    <Link to='/' style={{ marginRight: 10 }}>\r\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to='/profile' style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}>\r\n                        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                        <span style={{ marginTop: 10 }}>{userObj?.displayName ? `${userObj.displayName}의 Profile` : \"Profile\"}\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav >\r\n    )\r\n}\r\n\r\n\r\nexport default Navigation;","import React from 'react'\r\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\nimport Auth from '../routes/Auth'\r\nimport Home from '../routes/Home'\r\nimport { Profile } from '../routes/Profile'\r\nimport Navigation from './Navigation'\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            {/* Navigation이 존재하려면, isLoggedIn이 true 여야 한다 */}\r\n            <Switch>\r\n                {isLoggedIn ?\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}>\r\n                        <Route exact path='/'>\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path='/profile'>\r\n                            <Profile refreshUser={refreshUser} userObj={userObj?userObj:{displayName:\"user\"}} />\r\n                        </Route>\r\n                    </div> :\r\n                    <>\r\n                        <Route exact path='/'>\r\n                            <Auth />\r\n                        </Route>\r\n                        <Redirect from=\"*\" to=\"/\" />\r\n                    </>}\r\n            </Switch>\r\n        </Router >\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from 'react'\nimport { auth } from 'fbase';\nimport AppRouter from 'components/Router';\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [isLoggedIn, setIsLoggedIn] = useState(auth.getAuth().currentUser)\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    auth.onAuthStateChanged(auth.getAuth(), (user) => {\n      if (user) {\n        setIsLoggedIn(true)\n        // setUserObj({\n        //   displayName: user.displayName,\n        //   uid: user.uid,\n        //   updateProfile: (args) => auth.updateProfile(user, args),\n        // })\n        setUserObj(user)\n      }\n      else {\n        setUserObj(null)\n      }\n      setInit(true)\n    })\n  }, []);\n\n  const refreshUser = () => {\n    const user = auth.getAuth().currentUser;\n    // setUserObj({\n    //   displayName: user.displayName,\n    //   uid: user.uid,\n    //   updateProfile: (args) => auth.updateProfile(user, args),\n    // })\n    setUserObj({ ...user })\n  }\n\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={isLoggedIn} userObj={userObj} /> : \"Initializing...\"}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}